name: Make Release

on:
  workflow_dispatch:

jobs:
  build_server_mfc:
    name: Build server-mfc
    runs-on: windows-latest
    defaults:
      run:
        working-directory: server-mfc
    env:
      VCPKG_DEFAULT_TRIPLET: x64-windows-static-md
    steps:
      - uses: actions/checkout@v3
      - run: git pull
      - uses: microsoft/setup-msbuild@v1
      - uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: e57b2167e66c847f991bd6bce1355b85acd944e8
      - run: vcpkg integrate install
      - run: vcpkg install asio protobuf spdlog[wchar] wil nlohmann-json
      - run: msbuild /m /p:Configuration=Release,Platform=x64
      - name: Checksum
        run: cd x64/Release/ && sha256sum *.exe | tee $(ls *.exe).sha256
        shell: bash
      - uses: actions/upload-artifact@v3
        with:
          name: server-mfc
          path: |
            server-mfc/x64/Release/*.exe
            server-mfc/x64/Release/*.sha256

  create_release:
    name: Create Release
    needs: [build_server_mfc]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - run: git pull
      - run: chmod +x ./scripts/get_version.sh
      - uses: actions/download-artifact@v4.1.7
        with:
          path: release_bin
      - name: Generate release notes
        run: 'echo -e "$(cat ./metadata/en-US/changelogs/$(bash ./scripts/get_version.sh -c).txt)" > notes'
        env:
          app_hash: ${{ needs.build_app.outputs.hash }}
          server_hash: ${{ needs.build_server.outputs.hash }}
      - name: Create Github Release
        run: |
          version=$(bash ./scripts/get_version.sh -n)
          gh release create "v$version" -d -F notes -t "v$version" release_bin/*/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
